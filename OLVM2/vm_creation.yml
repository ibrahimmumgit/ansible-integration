---
- name: olvm VM creation
  hosts: localhost
  tasks: 
    - name: Fetch the category
      set_fact: 
        category: "{{ morpheus['customOptions']['olvm_category']}}"
    - name: Morpheus set_fct for File system and asm 
      set_fact:
        olvm_vmname: "{{ morpheus['customOptions']['olvm_vmname']}}"
        olvm_nodeip: "{{ morpheus['customOptions']['olvm_nodeip']}}"
    - name: Morpheus set_fct for RAC cluster
      set_fact:
        olvm_vmname2: "{{ morpheus['customOptions']['olvm_vmname2']}}"
        olvm_nodeip2: "{{ morpheus['customOptions']['olvm_nodeip2']}}"
        olvm_nodeprivips1: "{{ morpheus['customOptions']['olvm_nodeprivips1']}}"
        olvm_nodeprivips2: "{{ morpheus['customOptions']['olvm_nodeprivips2']}}"
        olvm_nodevipips1: "{{ morpheus['customOptions']['olvm_nodevipips1']}}"
        olvm_nodevipips2: "{{ morpheus['customOptions']['olvm_nodevipips2']}}"
      when: category == "3"

    - name: Single instance with asm
      block:
        - name: Single instance with asm | transfer ini files
          template:                 
            src: "netconfig-single-asm.j2"      
            dest: "~/deploycluster/utils/netconfig-single-asm.ini"
        - name: Single instance with asm | create disk
          ansible.builtin.shell: deploycluster --createdisk {{ olvm_vmname}}_DATA1,storagedomain=dev-huawei-04,size=100G,shared=false,thin=false
          args:
            chdir:  ~/deploycluster/utils/
        - name: Single instance with asm | create VM
          ansible.builtin.shell: deploycluster -C OL85-DB1914-04 -M TEST --cloneattach {{ olvm_vmname}}_DATA1 --clonenet nic1=vm248 --clonemem 16G --clonecpu 8,1,1 --clonetype full --clonedeploy -N utils/netconfig-single-asm.ini -P utils/params-single-asm.ini
          args:
            chdir:  ~/deploycluster/utils/
      when: category == "1"

    - name: Single instance with Filesystem
      block:
        - name: Single instance with asm | transfer ini files
          template:                 
            src: "netconfig-single-fs.j2"      
            dest: "~/deploycluster/utils/netconfig-single-fs.ini"
        - name: Single instance with asm | create disk
          ansible.builtin.shell: deploycluster --createdisk {{ olvm_vmname}}_DATA1,storagedomain=dev-huawei-04,size=100G,shared=false,thin=false
          args:
            chdir:  ~/deploycluster/utils/
        - name: Single instance with asm | create VM
          ansible.builtin.shell: deploycluster -C OL85-DB1914-04 -M TEST --cloneattach {{ olvm_vmname}}_DATA1 --clonenet nic1=vm248 --clonemem 16G --clonecpu 8,1,1 --clonetype full --clonedeploy -N utils/netconfig-single-asm.ini -P utils/params-single-asm.ini
          args:
            chdir:  ~/deploycluster/utils/
      when: category == "2"

    - name: Rac (cluster) with asm
      block:
        - name: Single instance with asm | transfer ini files
          template:                 
            src: "netconfig-racolvm.j2"      
            dest: "/tmp/netconfig-racolvm.ini"
        # - name: Single instance with asm | create disk
        #   ansible.builtin.shell: deploycluster --createdisk {{ olvm_vmname}}_DATA1,storagedomain=dev-huawei-04,size=100G,shared=false,thin=false
        #   args:
        #     chdir:  ~/deploycluster/utils/
        # - name: Single instance with asm | create VM
        #   ansible.builtin.shell: deploycluster -C OL85-DB1914-04 -M TEST --cloneattach {{ olvm_vmname}}_DATA1 --clonenet nic1=vm248 --clonemem 16G --clonecpu 8,1,1 --clonetype full --clonedeploy -N utils/netconfig-single-asm.ini -P utils/params-single-asm.ini
        #   args:
        #     chdir:  ~/deploycluster/utils/
      when: category == "3"
