- name: Get Barman server informations
  set_fact:
    _barman_server_info: "{{ lookup('edb_devops.edb_postgres.barman_server', wantlist=True) }}"

- name: Fail if barman server informations are not found
  fail:
    msg: "Unable to find barman server informations"
  when:
    - _barman_server_info|length == 0

- name: Set _barman_server_public_ip
  set_fact:
    _barman_server_public_ip: "{{ _barman_server_info[0].ansible_host }}"

- name: Set _pg_host when not using hostname
  set_fact:
    _pg_host: "{{ hostvars[inventory_hostname].private_ip }}"
  when: "not use_hostname"

- name: Set _pg_host when using hostname
  set_fact:
    _pg_host: "{{ inventory_hostname }}"
  when: use_hostname

- name: Add a crontab entry for barman backup at 00:00 every day
  lineinfile:
    line: "0 0 * * * barman /usr/bin/barman backup {{ inventory_hostname }}-{{ pg_instance_name }}"
    state: present
    path: /etc/cron.d/barman
  delegate_to: "{{ _barman_server_public_ip }}"
  become: true

- name: Start barman cron
  command:
    cmd: "/usr/bin/barman cron"
  delegate_to: "{{ _barman_server_public_ip }}"
  become: true
  become_user: barman  

- name: barman receive-wal when EPAS
  shell: nohup /usr/bin/barman receive-wal {{ inventory_hostname }}-{{ pg_instance_name }} </dev/null >/dev/null 2>&1 &
  environment:
    PATH: "{{ lookup('env','PATH') }}:/usr/edb/as{{ barman_pg_version }}/bin"
  delegate_to: "{{ _barman_server_public_ip }}"  
  become_user: barman
  when:
    - "'primary' in group_names"
    -  "pg_version|int < 12"
    -  "pg_type == 'EPAS'"
    
- name: barman receive-wal when PG
  shell: nohup /usr/bin/barman receive-wal {{ inventory_hostname }}-{{ pg_instance_name }} </dev/null >/dev/null 2>&1 &
  environment:
    PATH: "{{ lookup('env','PATH') }}:/usr/edb/as{{ barman_pg_version }}/bin"
  delegate_to: "{{ _barman_server_public_ip }}"
  become_user: barman
  when:
    - "'primary' in group_names"
    - "pg_type == 'PG'"
    
- pause:
    seconds: 60
  
- name: Archive the first WAL file using barman
  command:
    cmd: "/usr/bin/barman switch-wal {{ inventory_hostname }}-{{ pg_instance_name }} --archive"     
  delegate_to: "{{ _barman_server_public_ip }}"
  become_user: barman
  when:
    - "'primary' in group_names"

- pause:
    minutes: 2
  when: pg_type == 'PG'
    
- name: Execute barman check when EPAS_type
  command:
    cmd: "/usr/bin/barman check {{ inventory_hostname }}-{{ pg_instance_name }}"
  environment:
    PATH: "{{ lookup('env','PATH') }}:/usr/edb/as{{ barman_pg_version }}/bin"  
  delegate_to: "{{ _barman_server_public_ip }}"
  become: true
  become_user: barman
  ignore_errors: true
  when:
    - "'primary' in group_names"
    - "pg_version|int < 12"
    - "pg_type == 'EPAS'"
    
- name: Execute barman check when EPAS_type
  command:
    cmd: "/usr/bin/barman check {{ inventory_hostname }}-{{ pg_instance_name }}"   
  delegate_to: "{{ _barman_server_public_ip }}"
  become: true
  become_user: barman
  ignore_errors: true
  when:
    - "'primary' in group_names"
    - "pg_version|int > 11"
    - "pg_type == 'EPAS'"
    
- name: Execute barman check when PG_type
  command:
    cmd: "/usr/bin/barman check {{ inventory_hostname }}-{{ pg_instance_name }}"  
  environment:
    PATH: "{{ lookup('env','PATH') }}:/usr/edb/as{{ barman_pg_version }}/bin:/usr/pgsql-{{pg_version}}/bin"   
  delegate_to: "{{ _barman_server_public_ip }}"
  become: true
  become_user: barman
  ignore_errors: true
  when:
    - "'primary' in group_names"
    - "pg_type == 'PG'"
    
- name: Take a barman backup EPAS
  command:
    cmd: "/usr/bin/barman backup {{ inventory_hostname }}-{{ pg_instance_name }}"
  environment:
    PATH: "{{ lookup('env','PATH') }}:/usr/edb/as{{ barman_pg_version }}/bin"  
  delegate_to: "{{ _barman_server_public_ip }}"
  become: true
  become_user: barman
  when:
    - "'primary' in group_names"
    - "pg_version|int < 12"
    - "pg_type == 'EPAS'"    
    
- name: Take a barman backup when EPAS
  command:
    cmd: "/usr/bin/barman backup {{ inventory_hostname }}-{{ pg_instance_name }}"    
  delegate_to: "{{ _barman_server_public_ip }}"
  become: true
  become_user: barman
  when:
    - "'primary' in group_names"
    - "pg_version|int > 11"
    - "pg_type == 'EPAS'"

- name: Take a barman backup when PG
  command:
    cmd: "/usr/bin/barman backup {{ inventory_hostname }}-{{ pg_instance_name }}"
  environment:
    PATH: "{{ lookup('env','PATH') }}:/usr/edb/as{{ barman_pg_version }}/bin:/usr/pgsql-{{pg_version}}/bin" 
  delegate_to: "{{ _barman_server_public_ip }}"
  become: true
  become_user: barman
  when:
    - "'primary' in group_names"
    - "pg_type == 'PG'"
